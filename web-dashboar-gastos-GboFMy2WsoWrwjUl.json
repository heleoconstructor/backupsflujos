{"createdAt":"2025-10-25T17:08:41.448Z","updatedAt":"2025-10-25T18:02:50.553Z","id":"GboFMy2WsoWrwjUl","name":"web dashboar gastos","active":true,"isArchived":false,"nodes":[{"parameters":{"path":"dashboard_gastos","responseMode":"responseNode","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2.1,"position":[-144,160],"id":"d1f4f713-7faf-4536-b531-592b378a3b0c","name":"Webhook","webhookId":"6025d113-fbad-4654-81f7-07ca8497cf62"},{"parameters":{"html":"<!DOCTYPE html>\n<html lang=\"es\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Dashboard de Gastos</title>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js\"></script>\n  <style>\n    * {\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n    }\n    \n    body {\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;\n      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n      min-height: 100vh;\n      padding: 1.5rem;\n    }\n    \n    .dashboard {\n      max-width: 1400px;\n      margin: 0 auto;\n    }\n    \n    .header {\n      text-align: center;\n      color: white;\n      margin-bottom: 2rem;\n    }\n    \n    .header h1 {\n      font-size: 2.5rem;\n      font-weight: 700;\n      margin-bottom: 0.5rem;\n      text-shadow: 0 2px 4px rgba(0,0,0,0.1);\n    }\n    \n    .header p {\n      font-size: 1.1rem;\n      opacity: 0.95;\n    }\n    \n    .filter-info {\n      background: rgba(255, 255, 255, 0.2);\n      backdrop-filter: blur(10px);\n      color: white;\n      padding: 0.75rem 1.5rem;\n      border-radius: 12px;\n      margin: 0 auto 1.5rem;\n      max-width: 600px;\n      text-align: center;\n      display: none;\n    }\n    \n    .filter-info.active {\n      display: block;\n    }\n    \n    .filter-info strong {\n      font-weight: 700;\n    }\n    \n    .clear-filter {\n      background: white;\n      color: #667eea;\n      border: none;\n      padding: 0.4rem 1rem;\n      border-radius: 8px;\n      font-weight: 600;\n      cursor: pointer;\n      margin-left: 1rem;\n      transition: all 0.3s;\n    }\n    \n    .clear-filter:hover {\n      transform: scale(1.05);\n      box-shadow: 0 2px 8px rgba(0,0,0,0.2);\n    }\n    \n    .cards-grid {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n      gap: 1.5rem;\n      margin-bottom: 2rem;\n    }\n    \n    .card {\n      background: white;\n      border-radius: 16px;\n      padding: 1.5rem;\n      box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n      transition: transform 0.3s, box-shadow 0.3s;\n    }\n    \n    .card:hover {\n      transform: translateY(-4px);\n      box-shadow: 0 8px 12px rgba(0,0,0,0.15);\n    }\n    \n    .card-title {\n      font-size: 0.9rem;\n      color: #6b7280;\n      font-weight: 600;\n      margin-bottom: 0.75rem;\n      text-transform: uppercase;\n      letter-spacing: 0.5px;\n    }\n    \n    .card-value {\n      font-size: 2.5rem;\n      font-weight: 700;\n      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n      background-clip: text;\n    }\n    \n    .charts-grid {\n      display: grid;\n      grid-template-columns: 1fr 1.5fr;\n      gap: 1.5rem;\n      margin-bottom: 2rem;\n    }\n    \n    .chart-container {\n      background: white;\n      border-radius: 16px;\n      padding: 1.5rem;\n      box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n    }\n    \n    .chart-title {\n      font-size: 1.1rem;\n      color: #374151;\n      font-weight: 600;\n      margin-bottom: 1.5rem;\n      padding-bottom: 0.75rem;\n      border-bottom: 2px solid #f3f4f6;\n    }\n    \n    .chart-wrapper {\n      position: relative;\n      height: 350px;\n      cursor: pointer;\n    }\n    \n    .line-chart-wrapper {\n      height: 300px;\n    }\n    \n    .gastos-list-container {\n      background: white;\n      border-radius: 16px;\n      padding: 1.5rem;\n      box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n      margin-bottom: 2rem;\n    }\n    \n    .gastos-list {\n      max-height: 500px;\n      overflow-y: auto;\n    }\n    \n    .gasto-item {\n      display: grid;\n      grid-template-columns: auto 1fr auto auto;\n      gap: 1rem;\n      padding: 1rem;\n      border-bottom: 1px solid #f3f4f6;\n      align-items: center;\n      transition: background 0.2s;\n    }\n    \n    .gasto-item:hover {\n      background: #f9fafb;\n    }\n    \n    .gasto-item:last-child {\n      border-bottom: none;\n    }\n    \n    .gasto-fecha {\n      font-size: 0.85rem;\n      color: #6b7280;\n      font-weight: 600;\n      min-width: 80px;\n    }\n    \n    .gasto-descripcion {\n      color: #374151;\n      font-weight: 500;\n    }\n    \n    .gasto-categoria {\n      padding: 0.25rem 0.75rem;\n      border-radius: 12px;\n      font-size: 0.8rem;\n      font-weight: 600;\n      color: white;\n      white-space: nowrap;\n    }\n    \n    .gasto-monto {\n      font-size: 1.1rem;\n      font-weight: 700;\n      color: #667eea;\n      min-width: 90px;\n      text-align: right;\n    }\n    \n    .empty-state {\n      text-align: center;\n      padding: 3rem;\n      color: #9ca3af;\n    }\n    \n    .empty-state svg {\n      width: 64px;\n      height: 64px;\n      margin: 0 auto 1rem;\n      opacity: 0.5;\n    }\n    \n    .summary-panel {\n      background: white;\n      border-radius: 16px;\n      padding: 1.5rem;\n      box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n      text-align: center;\n    }\n    \n    .summary-title {\n      font-size: 1.2rem;\n      color: #374151;\n      font-weight: 600;\n      margin-bottom: 0.5rem;\n    }\n    \n    .summary-author {\n      font-size: 0.95rem;\n      color: #6b7280;\n    }\n    \n    @media (max-width: 1200px) {\n      .charts-grid {\n        grid-template-columns: 1fr;\n      }\n    }\n    \n    @media (max-width: 768px) {\n      body {\n        padding: 1rem;\n      }\n      \n      .header h1 {\n        font-size: 1.8rem;\n      }\n      \n      .cards-grid {\n        grid-template-columns: 1fr;\n        gap: 1rem;\n      }\n      \n      .card-value {\n        font-size: 2rem;\n      }\n      \n      .charts-grid {\n        gap: 1rem;\n      }\n      \n      .chart-wrapper {\n        height: 300px;\n      }\n      \n      .line-chart-wrapper {\n        height: 250px;\n      }\n      \n      .gasto-item {\n        grid-template-columns: 1fr;\n        gap: 0.5rem;\n      }\n      \n      .gasto-monto {\n        text-align: left;\n      }\n    }\n    \n    @media (max-width: 480px) {\n      .header h1 {\n        font-size: 1.5rem;\n      }\n      \n      .header p {\n        font-size: 0.95rem;\n      }\n      \n      .card-value {\n        font-size: 1.75rem;\n      }\n      \n      .chart-wrapper {\n        height: 250px;\n      }\n    }\n  </style>\n</head>\n<body>\n  <div class=\"dashboard\">\n    <div class=\"header\">\n      <h1>ðŸ“Š Dashboard de Gastos</h1>\n      <p>AnÃ¡lisis detallado de tus finanzas personales</p>\n    </div>\n    \n    <div class=\"filter-info\" id=\"filterInfo\">\n      <span>Filtrando por: <strong id=\"filterText\">Todos</strong></span>\n      <button class=\"clear-filter\" onclick=\"clearFilter()\">âœ• Limpiar filtro</button>\n    </div>\n    \n    <div class=\"cards-grid\">\n      <div class=\"card\">\n        <div class=\"card-title\">Cantidad de gastos</div>\n        <div class=\"card-value\" id=\"cantidadGastos\">0</div>\n      </div>\n      \n      <div class=\"card\">\n        <div class=\"card-title\">Total de gastos</div>\n        <div class=\"card-value\" id=\"totalGastos\">S/ 0.00</div>\n      </div>\n    </div>\n    \n    <div class=\"charts-grid\">\n      <div class=\"chart-container\">\n        <div class=\"chart-title\">Gastos por categorÃ­a</div>\n        <div class=\"chart-wrapper\">\n          <canvas id=\"pieChart\"></canvas>\n        </div>\n      </div>\n      \n      <div class=\"chart-container\">\n        <div class=\"chart-title\">DistribuciÃ³n de gastos por dÃ­as</div>\n        <div class=\"chart-wrapper line-chart-wrapper\">\n          <canvas id=\"lineChart\"></canvas>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"gastos-list-container\">\n      <div class=\"chart-title\">Detalle de gastos</div>\n      <div class=\"gastos-list\" id=\"gastosList\"></div>\n    </div>\n    \n    <div class=\"summary-panel\">\n      <div class=\"summary-title\">Panel resumen de todos mi registro de gastos</div>\n      <div class=\"summary-author\">Autor: EficiencIA Cloud</div>\n    </div>\n  </div>\n\n  <script>\n    // Datos de entrada desde n8n\n    const inputData = {{ JSON.stringify($input.all()) }};\n    const datosOriginales = inputData.map(item => item.json);\n    \n    // Variables globales\n    let pieChart, lineChart;\n    let categoriaActiva = null;\n    \n    // Colores para las categorÃ­as\n    const coloresCategoria = {\n      'comida': '#34d399',\n      'transporte': '#fbbf24',\n      'servicios': '#f87171',\n      'entretenimiento': '#fb923c',\n      'salud': '#60a5fa',\n      'educacion': '#a78bfa',\n      'hogar': '#2dd4bf',\n      'mis padres': '#818cf8',\n      'otros': '#c084fc'\n    };\n    \n    // Procesar datos\n    function procesarDatos(datos) {\n      const cantidad = datos.length;\n      const total = datos.reduce((sum, gasto) => sum + parseFloat(gasto.monto || 0), 0);\n      \n      const gastosPorCategoria = {};\n      datos.forEach(gasto => {\n        const cat = gasto.categoria || 'otros';\n        gastosPorCategoria[cat] = (gastosPorCategoria[cat] || 0) + parseFloat(gasto.monto || 0);\n      });\n      \n      const gastosPorDia = {};\n      datos.forEach(gasto => {\n        const fecha = gasto.fecha;\n        gastosPorDia[fecha] = (gastosPorDia[fecha] || 0) + parseFloat(gasto.monto || 0);\n      });\n      \n      const fechasOrdenadas = Object.keys(gastosPorDia).sort();\n      \n      return { cantidad, total, gastosPorCategoria, gastosPorDia, fechasOrdenadas };\n    }\n    \n    // Actualizar tarjetas\n    function actualizarTarjetas(resultado) {\n      document.getElementById('cantidadGastos').textContent = resultado.cantidad;\n      document.getElementById('totalGastos').textContent = `S/ ${resultado.total.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`;\n    }\n    \n    // Renderizar lista de gastos\n    function renderizarListaGastos(datos) {\n      const container = document.getElementById('gastosList');\n      \n      if (datos.length === 0) {\n        container.innerHTML = `\n          <div class=\"empty-state\">\n            <div style=\"font-size: 3rem; margin-bottom: 1rem;\">ðŸ“­</div>\n            <p>No hay gastos para mostrar</p>\n          </div>\n        `;\n        return;\n      }\n      \n      // Ordenar por fecha descendente\n      const datosOrdenados = [...datos].sort((a, b) => new Date(b.fecha) - new Date(a.fecha));\n      \n      container.innerHTML = datosOrdenados.map(gasto => {\n        const color = coloresCategoria[gasto.categoria] || '#9ca3af';\n        const [year, month, day] = gasto.fecha.split('-');\n        const fechaFormateada = `${day}/${month}/${year}`;\n        \n        return `\n          <div class=\"gasto-item\">\n            <div class=\"gasto-fecha\">${fechaFormateada}</div>\n            <div class=\"gasto-descripcion\">${gasto.descripcion}</div>\n            <div class=\"gasto-categoria\" style=\"background-color: ${color};\">${gasto.categoria}</div>\n            <div class=\"gasto-monto\">S/ ${parseFloat(gasto.monto).toFixed(2)}</div>\n          </div>\n        `;\n      }).join('');\n    }\n    \n    // Crear grÃ¡fico de torta\n    function crearPieChart(resultado) {\n      const categorias = Object.keys(resultado.gastosPorCategoria);\n      const montosCategoria = Object.values(resultado.gastosPorCategoria);\n      const coloresPie = categorias.map(cat => coloresCategoria[cat] || '#9ca3af');\n      \n      const ctx = document.getElementById('pieChart').getContext('2d');\n      \n      if (pieChart) pieChart.destroy();\n      \n      pieChart = new Chart(ctx, {\n        type: 'doughnut',\n        data: {\n          labels: categorias,\n          datasets: [{\n            data: montosCategoria,\n            backgroundColor: coloresPie,\n            borderWidth: 3,\n            borderColor: '#fff',\n            hoverOffset: 15\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          onClick: (event, elements) => {\n            if (elements.length > 0) {\n              const index = elements[0].index;\n              const categoria = categorias[index];\n              filtrarPorCategoria(categoria);\n            }\n          },\n          plugins: {\n            legend: {\n              position: 'right',\n              labels: {\n                padding: 15,\n                font: { size: 12 },\n                generateLabels: function(chart) {\n                  const data = chart.data;\n                  return data.labels.map((label, i) => {\n                    const value = data.datasets[0].data[i];\n                    const total = data.datasets[0].data.reduce((a, b) => a + b, 0);\n                    const porcentaje = ((value / total) * 100).toFixed(2);\n                    return {\n                      text: `${label}: ${porcentaje}%`,\n                      fillStyle: data.datasets[0].backgroundColor[i],\n                      hidden: false,\n                      index: i\n                    };\n                  });\n                }\n              }\n            },\n            tooltip: {\n              callbacks: {\n                label: function(context) {\n                  const label = context.label || '';\n                  const value = context.parsed;\n                  const total = context.dataset.data.reduce((a, b) => a + b, 0);\n                  const porcentaje = ((value / total) * 100).toFixed(2);\n                  return `${label}: S/ ${value.toFixed(2)} (${porcentaje}%)`;\n                }\n              }\n            }\n          }\n        }\n      });\n    }\n    \n    // Crear grÃ¡fico de lÃ­nea\n    function crearLineChart(resultado) {\n      const fechas = resultado.fechasOrdenadas;\n      const montosPorDia = fechas.map(fecha => resultado.gastosPorDia[fecha]);\n      \n      const ctx = document.getElementById('lineChart').getContext('2d');\n      \n      if (lineChart) lineChart.destroy();\n      \n      lineChart = new Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: fechas.map(fecha => {\n            const [year, month, day] = fecha.split('-');\n            return `${day}/${month}`;\n          }),\n          datasets: [{\n            label: 'Gastos diarios',\n            data: montosPorDia,\n            borderColor: '#14b8a6',\n            backgroundColor: 'rgba(20, 184, 166, 0.1)',\n            borderWidth: 3,\n            fill: true,\n            tension: 0.4,\n            pointRadius: 4,\n            pointHoverRadius: 6,\n            pointBackgroundColor: '#14b8a6',\n            pointBorderColor: '#fff',\n            pointBorderWidth: 2\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            legend: { display: false },\n            tooltip: {\n              callbacks: {\n                label: function(context) {\n                  return `Gastos: S/ ${context.parsed.y.toFixed(2)}`;\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              beginAtZero: true,\n              ticks: {\n                callback: function(value) {\n                  return 'S/ ' + value.toFixed(0);\n                }\n              },\n              grid: { color: 'rgba(0, 0, 0, 0.05)' }\n            },\n            x: { grid: { display: false } }\n          }\n        }\n      });\n    }\n    \n    // Filtrar por categorÃ­a\n    function filtrarPorCategoria(categoria) {\n      categoriaActiva = categoria;\n      const datosFiltrados = datosOriginales.filter(g => g.categoria === categoria);\n      const resultado = procesarDatos(datosFiltrados);\n      \n      actualizarTarjetas(resultado);\n      crearLineChart(resultado);\n      renderizarListaGastos(datosFiltrados);\n      \n      document.getElementById('filterInfo').classList.add('active');\n      document.getElementById('filterText').textContent = categoria.charAt(0).toUpperCase() + categoria.slice(1);\n    }\n    \n    // Limpiar filtro\n    function clearFilter() {\n      categoriaActiva = null;\n      const resultado = procesarDatos(datosOriginales);\n      \n      actualizarTarjetas(resultado);\n      crearPieChart(resultado);\n      crearLineChart(resultado);\n      renderizarListaGastos(datosOriginales);\n      \n      document.getElementById('filterInfo').classList.remove('active');\n    }\n    \n    // Inicializar dashboard\n    function inicializar() {\n      const resultado = procesarDatos(datosOriginales);\n      actualizarTarjetas(resultado);\n      crearPieChart(resultado);\n      crearLineChart(resultado);\n      renderizarListaGastos(datosOriginales);\n    }\n    \n    // Ejecutar al cargar\n    inicializar();\n  </script>\n</body>\n</html>"},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[480,160],"id":"ec9b7144-d4a6-4402-9a4b-e6f8ee17fb21","name":"HTML"},{"parameters":{"respondWith":"text","responseBody":"={{ $json.html }}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.4,"position":[880,160],"id":"12b200fe-9116-485d-9da2-eb7dd740bf84","name":"Respond to Webhook"},{"parameters":{"content":"## Dashboard de gastos\naca cree la web y la publico mediante un webhook","height":384,"width":1552},"type":"n8n-nodes-base.stickyNote","position":[-272,0],"typeVersion":1,"id":"4957324c-80b8-46a3-b10e-3e63baa77754","name":"Sticky Note"},{"parameters":{"content":"## usar este webhook\n### https://proxy.eficiencia.cloud/dashboar_gastos","height":112,"width":976,"color":2},"type":"n8n-nodes-base.stickyNote","position":[-272,-144],"typeVersion":1,"id":"31984832-f806-48f5-82f9-cdacff06a74b","name":"Sticky Note1"},{"parameters":{"authentication":"nocoDbApiToken","operation":"getAll","projectId":"prl7a2tz6nswihw","table":"m8tvrpwgjo1hwkj","options":{}},"type":"n8n-nodes-base.nocoDb","typeVersion":3,"position":[160,160],"id":"24444f05-8c0d-4693-a737-20958b51caa9","name":"Get many rows","retryOnFail":true,"credentials":{"nocoDbApiToken":{"id":"VzaOAq3reUMnCYi4","name":"NocoDB Token account"}}}],"connections":{"Webhook":{"main":[[{"node":"Get many rows","type":"main","index":0}]]},"HTML":{"main":[[{"node":"Respond to Webhook","type":"main","index":0}]]},"Get many rows":{"main":[[{"node":"HTML","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{"Webhook":[{"json":{"headers":{"host":"ene8w.heleo.com.pe","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36 Edg/140.0.0.0","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7","accept-encoding":"gzip, deflate, br, zstd","accept-language":"es-419,es;q=0.9,es-ES;q=0.8,en;q=0.7,en-GB;q=0.6,en-US;q=0.5,es-PE;q=0.4","priority":"u=0, i","sec-ch-ua":"\"Chromium\";v=\"140\", \"Not=A?Brand\";v=\"24\", \"Microsoft Edge\";v=\"140\"","sec-ch-ua-mobile":"?0","sec-ch-ua-platform":"\"Windows\"","sec-fetch-dest":"document","sec-fetch-mode":"navigate","sec-fetch-site":"none","sec-fetch-user":"?1","upgrade-insecure-requests":"1","x-forwarded-for":"190.239.25.123","x-forwarded-host":"ene8w.heleo.com.pe","x-forwarded-port":"443","x-forwarded-proto":"https","x-forwarded-server":"e1a79d945b11","x-real-ip":"190.239.25.123"},"params":{},"query":{"request_id":"14"},"body":{},"webhookUrl":"https://ene8w.heleo.com.pe/webhook/sl","executionMode":"production"}}]},"versionId":"2b220fad-73c2-4642-9d94-5b564b8d282a","triggerCount":1,"shared":[{"createdAt":"2025-10-25T17:08:41.448Z","updatedAt":"2025-10-25T17:08:41.448Z","role":"workflow:owner","workflowId":"GboFMy2WsoWrwjUl","projectId":"SqMi70IbghSQH4eu"}],"tags":[]}