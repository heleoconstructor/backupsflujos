{"createdAt":"2025-10-25T16:40:29.703Z","updatedAt":"2025-10-25T16:40:29.703Z","id":"9hJpZOYNIVb8m34o","name":"REGISTRO DE GASTOS mvp (funcional)","active":false,"isArchived":false,"nodes":[{"parameters":{"content":"whitelist","height":240,"width":980},"type":"n8n-nodes-base.stickyNote","position":[-3520,592],"typeVersion":1,"id":"95182de4-9fd5-4c08-abdb-49cd55cd3aec","name":"Sticky Note"},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $json[\"message.content_type\"] }}","rightValue":"audio","operator":{"type":"string","operation":"equals"},"id":"6970faf6-9d4f-4371-b00a-ba867e978121"}],"combinator":"and"},"renameOutput":true,"outputKey":"Audio"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"51f35c3d-9e46-4531-b5db-0a3e6a4b4211","leftValue":"={{ $json[\"message.content_type\"] }}","rightValue":"text","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"Text"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"81257730-8d8d-4b11-bae1-f1b01ab09856","leftValue":"={{ $json[\"message.content_type\"] }}","rightValue":"image","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"Image"}]},"options":{"fallbackOutput":"extra","renameFallbackOutput":"Other"}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[-2400,624],"id":"fa0555be-aa2a-40f3-b974-ccddb2959bd4","name":"tipo dato"},{"parameters":{"method":"POST","url":"={{ $json[\"instance.server_url\"] }}/chat/getBase64FromMediaMessage/{{ $json[\"instance.nombre\"] }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"apikey","value":"={{ $json[\"instance.apikey\"] }}"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"message.key.id","value":"={{ $json[\"message.id\"] }}"},{"name":"convertToMp4","value":"={{Boolean(false)}}"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-2016,-16],"id":"0c7f030c-5d9a-48b2-ba4a-73f4bb5cf12c","name":"get audio"},{"parameters":{"operation":"toBinary","sourceProperty":"base64","options":{"fileName":"file.ogg","mimeType":"={{ $json.mimetype }}"}},"type":"n8n-nodes-base.convertToFile","typeVersion":1.1,"position":[-1840,-16],"id":"59ca91f3-cd6a-4f7b-be4b-d58cef41913c","name":"Convert audio"},{"parameters":{"method":"POST","url":"https://api.groq.com/openai/v1/audio/transcriptions","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","sendHeaders":true,"headerParameters":{"parameters":[{}]},"sendBody":true,"contentType":"multipart-form-data","bodyParameters":{"parameters":[{"name":"model","value":"whisper-large-v3-turbo"},{"name":"temperature","value":"0"},{"name":"response_format","value":"verbose_json"},{"name":"language","value":"es"},{"parameterType":"formBinaryData","name":"file","inputDataFieldName":"data"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-2016,208],"id":"74c22d8b-7693-41ee-8047-5a512d0c98a6","name":"groq transcripción","credentials":{"httpHeaderAuth":{"id":"8PlaFYoc9ho8EcnX","name":"groq api n8n"}}},{"parameters":{"assignments":{"assignments":[{"id":"08ce01c6-96e0-4e0b-aa5d-11ee86a30d27","name":"markdown","value":"={{ $json.text }}","type":"string"},{"id":"38457a25-d703-4548-b19b-a8caa0ca673c","name":"message.from","value":"={{ $('set fields').item.json['message.from'] }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-1840,208],"id":"7056fa1f-612f-470a-9b46-8b98ca3547cf","name":"audio normalizado"},{"parameters":{"content":"## transcribir mensaje de audio \n","height":500,"width":432,"color":2},"type":"n8n-nodes-base.stickyNote","position":[-2096,-96],"typeVersion":1,"id":"aa2c8844-4054-45fb-9927-990bd9267375","name":"Sticky Note1"},{"parameters":{"httpMethod":"POST","path":"6286878b-d508-4a29-81c1-80c7ebc6d6e5","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-3472,656],"id":"0ce2b3df-111c-4699-b30a-476ca6d7aeb9","name":"recibe whatsapp","webhookId":"6286878b-d508-4a29-81c1-80c7ebc6d6e5"},{"parameters":{"authentication":"nocoDbApiToken","operation":"getAll","workspaceId":"wsz4x1lj","projectId":"pgukarxe1ax1kf4","table":"mhbct5pzxzep05y","options":{"fields":["celular"]}},"type":"n8n-nodes-base.nocoDb","typeVersion":3,"position":[-3232,656],"id":"3a039fe0-7057-4f77-ac2e-8449e5bf3d20","name":"whitelist1","credentials":{"nocoDbApiToken":{"id":"sg9AXpayfezBKp3A","name":"NocoDB Token cloud jd"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"loose","version":2},"conditions":[{"id":"4dc86c1f-e498-4094-809d-fe512b7ba1e5","leftValue":"={{ $json._validacion.estaEnListaBlanca }} }}","rightValue":"={{ $input.all().map(item => item.json.celular) }}","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"looseTypeValidation":true,"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-2784,656],"id":"d5abc436-5631-46ed-a056-3935109809de","name":"filtro"},{"parameters":{"assignments":{"assignments":[{"id":"a31c078a-e8be-4775-8fa4-48874b4e7b14","name":"markdown","value":"={{ $('set fields').item.json['message.content'] }}","type":"string"},{"id":"e4bfbfab-5339-41ed-80c8-e73609f0af36","name":"message.from","value":"={{ $('set fields').item.json['message.from'] }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-1920,416],"id":"6bc9f873-39a9-4417-9ddf-bb23e5418735","name":"normalize txt"},{"parameters":{"jsCode":"// Obtener el número del webhook (remover @s.whatsapp.net)\nconst numeroWebhook = $('recibe whatsapp').item.json.body.data.key.remoteJid.replace('@s.whatsapp.net', '');\n\n// Obtener todos los números de la lista blanca\nconst numerosListaBlanca = $input.all().map(item => item.json.celular);\n\n// Verificar si el número está en la lista blanca\nconst estaEnListaBlanca = numerosListaBlanca.includes(numeroWebhook);\n\n// Obtener datos del webhook\nconst webhookData = $('recibe whatsapp').item.json.body;\nconst messageData = webhookData.data;\n\n// Determinar el tipo de contenido\nlet contentType = '';\nif (messageData.message.extendedTextMessage) contentType = 'text';\nelse if (messageData.message.conversation) contentType = 'text';\nelse if (messageData.message.audioMessage) contentType = 'audio';\nelse if (messageData.message.imageMessage) contentType = 'image';\n\n// Obtener el contenido del mensaje\nlet messageContent = '';\nif (messageData.message.extendedTextMessage?.text) {\n  messageContent = messageData.message.extendedTextMessage.text;\n} else if (messageData.message.imageMessage?.caption) {\n  messageContent = messageData.message.imageMessage.caption;\n} else if (messageData.message.conversation) {\n  messageContent = messageData.message.conversation;\n}\n\n// Convertir fecha\nconst messageDate = new Date(webhookData.date_time).toISOString();\n\n// Retornar UN SOLO item con todos los campos limpios\nif (estaEnListaBlanca) {\n  return [{\n    json: {\n      // Campos de instancia\n      'instance.server_url': webhookData.server_url,\n      'instance.nombre': webhookData.instance,\n      'instance.apikey': webhookData.apikey,\n      \n      // Campos de mensaje\n      'message.from': messageData.key.remoteJid,\n      'message.id': messageData.key.id,\n      'message.content_type': contentType,\n      'message.content': messageContent,\n      'message.date': messageDate,\n      \n      // Campos de usuario\n      'user.name': messageData.pushName,\n      \n      // API Keys\n      'keyapi.deepgram': '87347040d82c105d3f47de19f7582ae2bf341754',\n      'keyapi.llamacloud': 'llx-8YVJLHZdOWSL0J4CEfDP7sV9UrgiLNZygPKB2S4RYbj51vVL',\n      \n      // Validación\n      '_validacion': {\n        estaEnListaBlanca: true,\n        numeroValidado: numeroWebhook\n      },\n      \n      // Mantener datos originales completos por si acaso\n      '_original': $('recibe whatsapp').item.json\n    }\n  }];\n} else {\n  return [{\n    json: {\n      'instance.server_url': webhookData.server_url,\n      'instance.nombre': webhookData.instance,\n      'instance.apikey': webhookData.apikey,\n      'message.from': messageData.key.remoteJid,\n      'message.id': messageData.key.id,\n      'message.content_type': contentType,\n      'message.content': messageContent,\n      'message.date': messageDate,\n      'user.name': messageData.pushName,\n      'keyapi.deepgram': '87347040d82c105d3f47de19f7582ae2bf341754',\n      'keyapi.llamacloud': 'llx-8YVJLHZdOWSL0J4CEfDP7sV9UrgiLNZygPKB2S4RYbj51vVL',\n      '_validacion': {\n        estaEnListaBlanca: false,\n        numeroValidado: numeroWebhook\n      },\n      '_original': $('recibe whatsapp').item.json\n    }\n  }];\n}"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-3008,656],"id":"00deddfb-d3b1-4077-9163-692e836f3221","name":"set fields"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[-896,864],"id":"42c64dad-6fbb-4ba6-b375-4ae05be374a2","name":"Google Gemini Chat Model1","credentials":{"googlePalmApi":{"id":"FCkOHRpbraeLDbx7","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"jsonSchemaExample":"{\n  \"intencion\": \"REGISTRAR_GASTO\",  \n  \"requiere_agente\": true\n}"},"type":"@n8n/n8n-nodes-langchain.outputParserStructured","typeVersion":1.3,"position":[-624,864],"id":"e992ec93-518a-447f-b871-426fbfa0890e","name":"Structured Output Parser1"},{"parameters":{"promptType":"define","text":"=const promptClasificador = `Eres un clasificador de intenciones. Analiza el mensaje y responde SOLO con un JSON.\n\nMENSAJE DEL USUARIO: \"{{ $('SET MSG').item.json.mensaje_respuesta }}\"\n\nINTENCIONES POSIBLES:\n1. AYUDA - Usuario pide ayuda o instrucciones.\n2. SALUDO - Usuario saluda (hola, buenos días, etc.).\n3. CONFIRMAR - Usuario acepta, aprueba o confirma algo.\n4. CANCELAR - Usuario rechaza, niega o cancela algo.\n5. REGISTRAR_GASTO - Usuario quiere registrar un gasto.\n6. REPORTE - Usuario pide ver gastos, reportes o resumen.\n7. EDITAR - Usuario quiere modificar un gasto anterior.\n8. NO_CLARO - No se entiende la intención.\n\nREGLAS:\n- Si menciona dinero, montos, pagó, gasté, compré → REGISTRAR_GASTO\n- Si dice \"sí\", \"si\", \"ok\", \"confirmar\", \"correcto\" → CONFIRMAR\n- Si dice \"no\", \"cancelar\", \"mejor no\", \"anular\", \"ya no\" → CANCELAR\n- Si pide \"ayuda\", \"cómo funciona\", \"qué puedo hacer\" → AYUDA\n- Si dice \"hola\", \"buenos días\", \"qué tal\" → SALUDO\n- Si pide \"reporte\", \"cuánto\", \"gastos de\", \"resumen\" → REPORTE\n\nRESPONDE SOLO CON ESTE JSON (sin texto adicional):\n{\n  \"intencion\": \"AYUDA|SALUDO|CONFIRMACION|REGISTRAR_GASTO|REPORTE|EDITAR|NO_CLARO\", \n  \"requiere_agente\": true o false\n}\nAnaliza y responde:`;","hasOutputParser":true,"options":{}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.2,"position":[-832,672],"id":"85b0cc36-5f1e-43d9-814d-469ac494e4eb","name":"agent router","retryOnFail":true},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"0578a726-56d5-4c4a-b349-761422eb3c03","leftValue":"={{ $json.output.intencion }}","rightValue":"REPORTE","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"REPORTE"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $json.output.intencion }}","rightValue":"SALUDO","operator":{"type":"string","operation":"equals"},"id":"d9aa8ade-84b5-488f-97b6-344db456f4ce"}],"combinator":"and"},"renameOutput":true,"outputKey":"SALUDO"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"b19531da-204f-431f-a413-dc8b81f8ffe5","leftValue":"={{ $json.output.intencion }}","rightValue":"AYUDA","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"AYUDA"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"72f45b52-1bb2-4b6c-9980-f586e9dfdc1e","leftValue":"={{ $json.output.intencion }}","rightValue":"NO_CLARO","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"ACLARAR"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"7ce60d75-e249-4d40-8533-812ce316a0a6","leftValue":"={{ $json.output.intencion }}","rightValue":"CONFIRMAR","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"CONFIRMACION"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"c86ce8f1-77ea-4d29-9b48-59d718f14bf3","leftValue":"={{ $json.output.intencion }}","rightValue":"CANCELAR","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"CANCELAR"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"2455e47d-7c42-4413-92d3-8fb7c67a2f37","leftValue":"={{ $json.output.intencion }}","rightValue":"REGISTRAR_GASTO","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"GASTO"}]},"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.3,"position":[-464,592],"id":"f893665b-71c2-4aa1-bc5f-16965ba23595","name":"Switch"},{"parameters":{"jsCode":"// Nodo Set - Respuesta Saludo\nconst hora = new Date().getHours();\nlet saludo = '¡Hola';\n\nif (hora < 12) saludo = '¡Buenos días';\nelse if (hora < 19) saludo = '¡Buenas tardes';\nelse saludo = '¡Buenas noches';\n\nreturn [{\n  json: {\n    ...$json,\n    mensaje_usuario: `${saludo}! 👋\n\nSoy tu asistente de control de gastos.\n\nPuedes decirme cosas como:\n- \"Pagué 25 en almuerzo\"\n- \"50 soles de taxi\"\n\nO escribe *ayuda* para ver todas las opciones 😊`\n  }\n}];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[320,160],"id":"6e628dbd-dddd-4d96-97c1-30f5d8da24ed","name":"Code saludo"},{"parameters":{"jsCode":"// Nodo Set - Respuesta Ayuda\nreturn [{\n  json: {\n    ...$json,\n    mensaje_usuario: `📱 *Guía de Control de Gastos*\n\n*🎯 Para registrar gastos:*\n- \"Pagué 25 en almuerzo\"\n- \"15 soles de taxi\"\n- \"100 de supermercado\"\n\n*📊 Categorías disponibles:*\ncomida • transporte • servicios\nentretenimiento • salud • educacion\nhogar • otros\n\n- Ver reportes diarios/semanales/mensual\n\n*🔜 Próximamente:*\n- Editar gastos anteriores\n- Estadísticas detalladas\n\n¿En qué puedo ayudarte? 😊`\n  }\n}];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[512,288],"id":"a3725151-8732-4671-beb9-021a140944ef","name":"Code ayuda"},{"parameters":{"assignments":{"assignments":[{"id":"e5a6f70a-51ea-4fb2-9c00-be558b14179c","name":"mensaje_respuesta","value":"={{ $json.mensaje_usuario }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1664,240],"id":"8668f76e-b504-46bd-8195-0d32abea4afd","name":"respuesta"},{"parameters":{"assignments":{"assignments":[{"id":"e5a6f70a-51ea-4fb2-9c00-be558b14179c","name":"mensaje_respuesta","value":"={{ $json.markdown }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-1072,672],"id":"0bcf0f23-50da-4af6-924a-b752d8efd75d","name":"SET MSG"},{"parameters":{"text":"=const prompt = `Eres un asistente de control de gastos personal por WhatsApp. Tu función es ayudar al usuario a registrar sus gastos de forma conversacional.\n\nCONTEXTO:\n- fecha actual {{ $now.toISO() }}\n- Mensaje: {{ $('SET MSG').item.json.mensaje_respuesta }}\n- Moneda: Soles (S/)\n\nCATEGORÍAS DISPONIBLES:\ncomida, transporte, servicios, entretenimiento, salud, educacion, hogar, mis padres, otros\n\nINSTRUCCIONES:\n1. Analiza el mensaje del usuario e identifica si quiere:\n   - Registrar un nuevo gasto\n   - Ver un reporte\n   - Solicitar ayuda\n   \n2. Para registrar gastos, extrae:\n   - Monto (número)\n   - Categoría (de la lista disponible)\n   - Descripción (texto libre)\n\n3. Si falta información, pregunta de forma natural\n\nREGLAS IMPORTANTES:\n- Si el monto está claro, siempre pide confirmación\n- Si NO hay monto, solicita esa información primero\n- Sé conciso y usa emojis apropiados\n- Si no entiendes el mensaje, pide clarificación\n- Los montos deben ser números positivos\n- Si mencionan una categoría que no existe, usa la más cercana o \"otros\"\n- NUNCA inventes datos, si algo no está claro en el mensaje, pregunta.\n- Siempre requiere confirmacion\n\nAhora analiza el mensaje del usuario y responde SOLO con el JSON:`;","schemaType":"fromJson","jsonSchemaExample":"{\n  \"accion\": \"confirmar_gasto\",\n  \"datos_extraidos\": {\n    \"monto\": 25,\n    \"categoria\": \"comida\",\n    \"descripcion\": \"almuerzo\",\n    \"fecha_gasto\": \"14/10/2025\"\n  },  \n  \"mensaje_usuario\": \"💰 ¿Confirmar gasto?\\n\\n📋 Categoría: Comida\\n💵 Monto: S/ 25.00\\n📝 Descripción: Almuerzo\\n\\nResponde *Sí* para guardar o *No* para cancelar\",\n  \"requiere_confirmacion\": true\n}","options":{}},"type":"@n8n/n8n-nodes-langchain.informationExtractor","typeVersion":1.2,"position":[64,1168],"id":"de2255f4-d3db-42b5-b6ee-edb7d38b5908","name":"Information Extractor"},{"parameters":{"authentication":"nocoDbApiToken","operation":"create","workspaceId":"wsz4x1lj","projectId":"pgukarxe1ax1kf4","table":"mn9szdaxo9lyiht","fieldsUi":{"fieldValues":[{"fieldName":"telefono","fieldValue":"={{ $('set fields').item.json['message.from'].replace('@s.whatsapp.net','') }}"},{"fieldName":"monto","fieldValue":"={{ $json.output.datos_extraidos.monto }}"},{"fieldName":"categoria","fieldValue":"={{ $json.output.datos_extraidos.categoria }}"},{"fieldName":"descripcion","fieldValue":"={{ $json.output.datos_extraidos.descripcion }}"},{"fieldName":"fecha","fieldValue":"={{ $json.output.datos_extraidos.fecha_gasto }}"},{"fieldName":"estado","fieldValue":"={{ $json.output.requiere_confirmacion ? 'pendiente' : 'confirmado' }}"},{"fieldName":"contexto_chat","fieldValue":"={{ $('SET MSG').item.json.mensaje_respuesta }}"}]}},"type":"n8n-nodes-base.nocoDb","typeVersion":3,"position":[416,1168],"id":"5c63c693-35f1-4220-b508-3607028a0b81","name":"crear gasto","credentials":{"nocoDbApiToken":{"id":"sg9AXpayfezBKp3A","name":"NocoDB Token cloud jd"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[240,1424],"id":"2b584ea9-1c67-423c-b35c-59f83c9bde3a","name":"Google Gemini Chat Model","credentials":{"googlePalmApi":{"id":"FCkOHRpbraeLDbx7","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"authentication":"nocoDbApiToken","operation":"getAll","workspaceId":"wsz4x1lj","projectId":"pgukarxe1ax1kf4","table":"mn9szdaxo9lyiht","options":{"where":" (estado,eq,pendiente)~and(telefono,eq,51952373850) "}},"type":"n8n-nodes-base.nocoDb","typeVersion":3,"position":[-16,704],"id":"d68b5b13-eced-4264-b820-ba37fc8ceff1","name":"get pendientes","alwaysOutputData":true,"credentials":{"nocoDbApiToken":{"id":"sg9AXpayfezBKp3A","name":"NocoDB Token cloud jd"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"loose","version":2},"conditions":[{"id":"4dc86c1f-e498-4094-809d-fe512b7ba1e5","leftValue":"={{ $json.tiene_datos }}","rightValue":"={{ $input.all().map(item => item.json.celular) }}","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"looseTypeValidation":true,"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[432,704],"id":"3e2bc280-636b-41eb-9806-6be11e6bf4f8","name":"filtro1"},{"parameters":{"jsCode":"// Nodo Set - Respuesta NO_CLARO\nreturn [{\n  json: {\n    ...$json,\n    mensaje_usuario: `🤔 No logré entender bien tu mensaje.\n\nPuedes decirme con más detalle qué deseas hacer.\nPor ejemplo:\n- \"Registrar gasto de 20 soles en transporte\"\n- \"Mostrar mis gastos de esta semana\"\n- \"Ayuda\" para ver cómo funciona el bot.\n\n¿Podrías aclararlo un poco, por favor? 😊`\n  }\n}];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[896,400],"id":"7ca26343-882c-4e25-b652-584a532ac0a0","name":"Code aclarar"},{"parameters":{"authentication":"nocoDbApiToken","operation":"getAll","workspaceId":"wsz4x1lj","projectId":"pgukarxe1ax1kf4","table":"mn9szdaxo9lyiht","options":{"where":" (estado,eq,pendiente)~and(telefono,eq,51952373850) "}},"type":"n8n-nodes-base.nocoDb","typeVersion":3,"position":[16,944],"id":"42230d3c-0d6b-4559-9d49-6d25b92bd671","name":"get pendientes1","credentials":{"nocoDbApiToken":{"id":"sg9AXpayfezBKp3A","name":"NocoDB Token cloud jd"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"loose","version":2},"conditions":[{"id":"4dc86c1f-e498-4094-809d-fe512b7ba1e5","leftValue":"={{ $json.tiene_datos }}","rightValue":"={{ $input.all().map(item => item.json.celular) }}","operator":{"type":"string","operation":"exists","singleValue":true}}],"combinator":"and"},"looseTypeValidation":true,"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[448,944],"id":"a62bc273-5553-46d1-9d47-931937629f17","name":"filtro2"},{"parameters":{"authentication":"nocoDbApiToken","operation":"update","workspaceId":"wsz4x1lj","projectId":"pgukarxe1ax1kf4","table":"mn9szdaxo9lyiht","fieldsUi":{"fieldValues":[{"fieldName":"id","fieldValue":"={{ $('get pendientes').item.json.Id }}"},{"fieldName":"estado","fieldValue":"confirmado"}]}},"type":"n8n-nodes-base.nocoDb","typeVersion":3,"position":[800,688],"id":"e7cb5aa1-7c59-41d2-81ed-e11eb6e8fca0","name":"actualizar gasto","credentials":{"nocoDbApiToken":{"id":"sg9AXpayfezBKp3A","name":"NocoDB Token cloud jd"}}},{"parameters":{"authentication":"nocoDbApiToken","operation":"delete","workspaceId":"wsz4x1lj","projectId":"pgukarxe1ax1kf4","table":"mn9szdaxo9lyiht","id":"={{ $('get pendientes1').item.json.Id }}"},"type":"n8n-nodes-base.nocoDb","typeVersion":3,"position":[752,928],"id":"ef5ba125-ede0-414c-a9fd-a6c7c7f105b4","name":"borrar gasto","credentials":{"nocoDbApiToken":{"id":"sg9AXpayfezBKp3A","name":"NocoDB Token cloud jd"}}},{"parameters":{"jsCode":"// Obtenemos los datos del nodo \"BuscarGasto\" (ajusta el nombre exacto)\nconst gasto = $node[\"get pendientes\"].json;\n\n// Extraemos los campos del gasto\nconst { monto, categoria, descripcion, fecha } = gasto;\n\n// Creamos el mensaje de confirmación\nconst mensaje = `✅ Perfecto, he registrado tu gasto correctamente.\n\n💰 **Monto:** ${monto ? monto + ' soles' : 'No especificado'}\n🏷️ **Categoría:** ${categoria || 'No especificada'}\n📝 **Descripción:** ${descripcion || 'No especificada'}\n📅 **Fecha:** ${fecha || 'Hoy'}\n\nGracias por confirmar. 🎉`;\n\nreturn [{\n  json: {\n    ...$json,\n    mensaje_usuario: mensaje\n  }\n}];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1040,688],"id":"60506e07-9f52-4e2a-9b26-591ead29ada5","name":"Code confirmacion"},{"parameters":{"jsCode":"// Nodo Set - Respuesta CANCELAR\nreturn [{\n  json: {\n    ...$json,\n    mensaje_usuario: `❌ Entendido, he cancelado el registro del gasto.\n\nNo se ha guardado el gasto.  \nSi quieres volver a intentarlo, puedes decirme algo como:\n- \"Registrar gasto de 40 soles en comida\"\n- \"Agregar gasto en transporte\"\n`\n  }\n}];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1040,928],"id":"eb746309-1cb5-4603-a8ea-aa101d8ff9d0","name":"Code cancelacion"},{"parameters":{"jsCode":"// Obtener todos los items que vienen del nodo anterior\nconst items = $input.all();\n\n// Si no hay items o el primer objeto no tiene claves => vacío\nconst tieneDatos = items.length > 0 && Object.keys(items[0].json || {}).length > 0;\n\nreturn [\n  {\n    json: {\n      tiene_datos: tieneDatos\n    }\n  }\n];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[224,944],"id":"81638aa9-9326-4a7f-ac30-e6164c997c6e","name":"Code in JavaScript1"},{"parameters":{"jsCode":"// Obtener todos los items que vienen del nodo anterior\nconst items = $input.all();\n\n// Si no hay items o el primer objeto no tiene claves => vacío\nconst tieneDatos = items.length > 0 && Object.keys(items[0].json || {}).length > 0;\n\nreturn [\n  {\n    json: {\n      tiene_datos: tieneDatos\n    }\n  }\n];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[224,704],"id":"ad1b5045-bad5-4761-845e-bb29ac0df8a5","name":"Code in JavaScript"},{"parameters":{"text":"=const prompt = `Eres un asistente que analiza solicitudes de reportes de gastos y devuelve un objeto JSON con el tipo de reporte y la información necesaria para consultarlo en la base de datos NocoDB.\n\nCONTEXTO:\n- fecha actual {{ $now.toISODate() }}\n- Mensaje: {{ $('SET MSG').item.json.mensaje_respuesta }}\n- Moneda: Soles (S/)\n\nTu tarea es identificar si el usuario quiere un reporte de:\n- **hoy**\n- **ayer**\n- **semana**\n- **mes**\n- o **ninguno**, si no está claro.\n\nEl resultado debe ser **siempre** un JSON con la siguiente estructura:\n\n{\n  \"reporte\": \"hoy\" | \"ayer\" | \"semana\" | \"mes\" | \"ninguno\",\n  \"descripcion\": \"breve resumen de lo que el usuario pidió\"\n}`;","schemaType":"fromJson","jsonSchemaExample":"{\n  \"reporte\": \"semana\",\n  \"descripcion\": \"El usuario pidió el reporte de gastos de la semana\"\n}","options":{}},"type":"@n8n/n8n-nodes-langchain.informationExtractor","typeVersion":1.2,"position":[-128,-48],"id":"5d8e75f5-33ab-4228-b8ee-e647e0c5ba2d","name":"reporteador"},{"parameters":{"jsCode":"// Obtener el tipo de reporte desde el agente\nconst reporte = $json.output?.reporte || 'ninguno';\n\n// Teléfono del usuario (ajusta según tu flujo)\nconst telefono = $('set fields').first().json._validacion.numeroValidado;\n\n// Función para obtener fecha en hora de Perú (UTC-5)\nfunction getPeruDate() {\n  const now = new Date();\n  // Ajustar a UTC-5 (Perú)\n  const peruTime = new Date(now.getTime() - (5 * 60 * 60 * 1000));\n  return peruTime;\n}\n\n// Función para formatear fechas (YYYY-MM-DD)\nfunction formatDate(date) {\n  const year = date.getUTCFullYear();\n  const month = String(date.getUTCMonth() + 1).padStart(2, '0');\n  const day = String(date.getUTCDate()).padStart(2, '0');\n  return `${year}-${month}-${day}`;\n}\n\n// Función para formatear fecha y hora (YYYY-MM-DD HH:MM:SS)\nfunction formatDateTime(date) {\n  const year = date.getUTCFullYear();\n  const month = String(date.getUTCMonth() + 1).padStart(2, '0');\n  const day = String(date.getUTCDate()).padStart(2, '0');\n  const hours = String(date.getUTCHours()).padStart(2, '0');\n  const minutes = String(date.getUTCMinutes()).padStart(2, '0');\n  const seconds = String(date.getUTCSeconds()).padStart(2, '0');\n  return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n}\n\nconst hoy = getPeruDate();\nlet fechaInicio, fechaFin;\n\nswitch (reporte) {\n  case 'hoy':\n    fechaInicio = formatDate(hoy);\n    fechaFin = formatDate(hoy);\n    break;\n  case 'ayer':\n    const ayer = new Date(hoy.getTime());\n    ayer.setUTCDate(hoy.getUTCDate() - 1);\n    fechaInicio = formatDate(ayer);\n    fechaFin = formatDate(ayer);\n    break;\n  case 'semana':\n    const inicioSemana = new Date(hoy.getTime());\n    inicioSemana.setUTCDate(hoy.getUTCDate() - hoy.getUTCDay());\n    fechaInicio = formatDate(inicioSemana);\n    fechaFin = formatDate(hoy);\n    break;\n  case 'mes':\n    const inicioMes = new Date(Date.UTC(hoy.getUTCFullYear(), hoy.getUTCMonth(), 1));\n    fechaInicio = formatDate(inicioMes);\n    fechaFin = formatDate(hoy);\n    break;\n  default:\n    fechaInicio = null;\n    fechaFin = null;\n}\n\n// Construir el WHERE según lo que pida el usuario\nlet where = `(telefono,eq,${telefono})`;\nif (fechaInicio && fechaFin) {\n  where += `~and(fecha,ge,exactDate,${fechaInicio})~and(fecha,le,exactDate,${fechaFin})`;\n}\n\n// Retornar el WHERE y la fecha/hora actual\nreturn [{\n  json: {\n    ...$json,\n    where,\n    fechaHoraActual: formatDateTime(hoy)  // Ahora en hora de Perú\n  }\n}];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[320,-48],"id":"fda8e814-9d57-4ff0-a7fa-9974c8afe975","name":"Code rangos fechas"},{"parameters":{"authentication":"nocoDbApiToken","operation":"getAll","workspaceId":"wsz4x1lj","projectId":"pgukarxe1ax1kf4","table":"mn9szdaxo9lyiht","options":{"where":"={{ $json.where }}"}},"type":"n8n-nodes-base.nocoDb","typeVersion":3,"position":[736,-48],"id":"a2b2111e-5b8b-4cdb-82fb-959683849f30","name":"BuscarGastos","credentials":{"nocoDbApiToken":{"id":"sg9AXpayfezBKp3A","name":"NocoDB Token cloud jd"}}},{"parameters":{"assignments":{"assignments":[{"id":"e5a6f70a-51ea-4fb2-9c00-be558b14179c","name":"mensaje_respuesta","value":"={{ $('Information Extractor').item.json.output.mensaje_usuario }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[608,1168],"id":"62b7886a-174e-45a7-8a87-0a9c38e13e87","name":"set respuesta"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[-96,144],"id":"83a8ab96-19ae-4f8d-86c0-d2d8924a9623","name":"Google Gemini Chat Model2","credentials":{"googlePalmApi":{"id":"FCkOHRpbraeLDbx7","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"jsCode":"// Nodo Code — Generar respuesta de reporte (funciona con varios items entrantes)\n// Obtener todos los items entrantes al nodo (cada item tiene .json)\nconst items = $input.all();\n// Mapear a un array simple de objetos JSON\nconst data = items.map(i => i.json);\n\n// Si no hay registros válidos\nif (!Array.isArray(data) || data.length === 0 || Object.keys(data[0] || {}).length === 0) {\n  return [{\n    json: {\n      ...$json,\n      mensaje_usuario: \"📭 No encontré gastos en ese período.\",\n      total: 0,\n      resumen: {},\n      registros: []\n    }\n  }];\n}\n\n// Función para convertir fecha de YYYY-MM-DD a DD/MM/YYYY\nfunction formatearFecha(fecha) {\n  if (!fecha) return '';\n  \n  // Si ya viene en formato DD/MM/YYYY, retornarla tal cual\n  if (fecha.includes('/')) return fecha;\n  \n  // Convertir de YYYY-MM-DD a DD/MM/YYYY\n  const partes = fecha.split('-');\n  if (partes.length === 3) {\n    return `${partes[2]}/${partes[1]}/${partes[0]}`;\n  }\n  \n  return fecha; // Si no coincide con ningún formato, devolver original\n}\n\n// Calcular total y agrupar por categoría\nlet total = 0;\nconst resumen = {};\n\nfor (const g of data) {\n  const monto = Number(g.monto) || 0;\n  total += monto;\n  const cat = g.categoria || \"Sin categoría\";\n  resumen[cat] = (resumen[cat] || 0) + monto;\n}\n\n// Obtener periodo si existe (ej: 'hoy', 'ayer', etc.)\nconst periodo = $json.periodo || ($json.output && $json.output.reporte) || '';\n\n// Construir mensaje\nlet mensaje = `📊 **Reporte de gastos${periodo ? ' ' + periodo : ''}**\\n`;\nmensaje += `Total general: 💰 ${total.toFixed(2)} soles\\n\\n`;\nmensaje += `**Por categorías:**\\n`;\n\nfor (const [categoria, suma] of Object.entries(resumen)) {\n  mensaje += `- ${categoria}: ${suma.toFixed(2)} soles\\n`;\n}\n\nmensaje += `\\n🧾 **Detalles:**\\n`;\n\nfor (const g of data) {\n  const desc = g.descripcion || 'Sin descripción';\n  const fecha = formatearFecha(g.fecha || '');\n  mensaje += `• ${desc} — ${Number(g.monto).toFixed(2)} soles (${g.categoria || 'Sin categoría'}, ${fecha})\\n`;\n}\n\nmensaje += `\\nSe encontraron ${data.length} registros en total.`;\n\n// Retornar resultado para siguientes nodos\nreturn [{\n  json: {\n    ...$json,\n    mensaje_usuario: mensaje,\n    total,\n    resumen,\n    registros: data\n  }\n}];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1104,-48],"id":"4504208a-9c47-4cfa-99b1-8128f6bb5727","name":"Code reporte"},{"parameters":{"resource":"integrations-api","operation":"evolution-bot","instanceName":"={{ $('set fields').first().json['instance.nombre'] }}","resourceForEvolutionBot":"changeStatusEvolutionBot","evolutionBotId":"={{ $('set fields').first().json['message.id'] }}","remoteJid":"={{ $('set fields').first().json['message.from'] }}","status":"closed"},"type":"n8n-nodes-evolution-api.evolutionApi","typeVersion":1,"position":[1824,688],"id":"85b60929-176c-448e-b6bf-cf20fa8ff934","name":"cerrar","credentials":{"evolutionApi":{"id":"N4pL7HiqWBppbj8r","name":"Evolution account"}}},{"parameters":{"resource":"integrations-api","operation":"evolution-bot","instanceName":"={{ $('set fields').first().json['instance.nombre'] }}","resourceForEvolutionBot":"changeStatusEvolutionBot","evolutionBotId":"={{ $('set fields').first().json['message.id'] }}","remoteJid":"={{ $('set fields').first().json['message.from'] }}","status":"closed"},"type":"n8n-nodes-evolution-api.evolutionApi","typeVersion":1,"position":[1408,1168],"id":"49b7293a-fa9c-4224-8f01-57695247dcce","name":"cerrar chat","credentials":{"evolutionApi":{"id":"N4pL7HiqWBppbj8r","name":"Evolution account"}}},{"parameters":{"resource":"chat-api","operation":"send-presence","instanceName":"={{ $('set fields').item.json['instance.nombre'] }}","remoteJid":"={{ $('set fields').item.json['message.from'] }}","delay":"={{ Math.floor(Math.random() * 12001) }}"},"type":"n8n-nodes-evolution-api.evolutionApi","typeVersion":1,"position":[1008,1168],"id":"feea6dbc-0913-4e2e-9fb3-b241a08711e4","name":"escribiendo","credentials":{"evolutionApi":{"id":"N4pL7HiqWBppbj8r","name":"Evolution account"}}},{"parameters":{"resource":"chat-api","operation":"read-messages","instanceName":"={{ $('set fields').item.json['instance.nombre'] }}","remoteJid":"={{ $('set fields').item.json['message.from'] }}","messageId":"={{ $('set fields').item.json['message.id'] }}"},"type":"n8n-nodes-evolution-api.evolutionApi","typeVersion":1,"position":[800,1168],"id":"e45636ae-b0b2-4cdb-91ac-c2959ec46ca0","name":"leido","credentials":{"evolutionApi":{"id":"N4pL7HiqWBppbj8r","name":"Evolution account"}}},{"parameters":{"resource":"messages-api","instanceName":"={{ $('set fields').item.json['instance.nombre'] }}","remoteJid":"={{ $('set fields').item.json['message.from'] }}","messageText":"={{ $('set respuesta').item.json.mensaje_respuesta }}","options_message":{"delay":1200}},"type":"n8n-nodes-evolution-api.evolutionApi","typeVersion":1,"position":[1216,1168],"id":"80589a78-e4cf-4429-a9c1-b6b75f0932e1","name":"respondiendo","credentials":{"evolutionApi":{"id":"N4pL7HiqWBppbj8r","name":"Evolution account"}}},{"parameters":{"resource":"chat-api","operation":"send-presence","instanceName":"={{ $('set fields').first().json[\"instance.nombre\"] }}","remoteJid":"={{ $('set fields').first().json['message.from'] }}","delay":"={{ Math.floor(Math.random() * 12001) }}"},"type":"n8n-nodes-evolution-api.evolutionApi","typeVersion":1,"position":[1824,480],"id":"01284f9c-db55-4f83-967e-1c8a0deb270f","name":"escribiendo1","credentials":{"evolutionApi":{"id":"N4pL7HiqWBppbj8r","name":"Evolution account"}}},{"parameters":{"resource":"chat-api","operation":"read-messages","instanceName":"={{ $('set fields').first().json[\"instance.nombre\"] }}","remoteJid":"={{ $('set fields').first().json['message.from'] }}","messageId":"={{ $('set fields').first().json['message.id'] }}"},"type":"n8n-nodes-evolution-api.evolutionApi","typeVersion":1,"position":[1632,480],"id":"82fec46c-5d73-4eb2-836e-42d60ef7c28b","name":"leido1","credentials":{"evolutionApi":{"id":"N4pL7HiqWBppbj8r","name":"Evolution account"}}},{"parameters":{"resource":"messages-api","instanceName":"={{ $('set fields').first().json['instance.nombre'] }}","remoteJid":"={{ $('set fields').first().json['message.from'] }}","messageText":"={{ $('respuesta').item.json.mensaje_respuesta }}","options_message":{}},"type":"n8n-nodes-evolution-api.evolutionApi","typeVersion":1,"position":[1632,688],"id":"312c3e11-87f9-41be-a245-9dd0fb3ab0d4","name":"respuesta1","credentials":{"evolutionApi":{"id":"N4pL7HiqWBppbj8r","name":"Evolution account"}}},{"parameters":{"method":"POST","url":"={{ $('set fields').item.json[\"instance.server_url\"] }}/chat/getBase64FromMediaMessage/{{ $('set fields').item.json[\"instance.nombre\"] }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"apikey","value":"={{ $('set fields').item.json[\"instance.apikey\"] }}"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"message.key.id","value":"={{ $('set fields').item.json[\"message.id\"] }}"},{"name":"convertToMp4","value":"={{Boolean(false)}}"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-2048,624],"id":"2d28a9cc-79a5-49ef-a81c-97025b790d79","name":"get image"},{"parameters":{"operation":"toBinary","sourceProperty":"base64","options":{}},"type":"n8n-nodes-base.convertToFile","typeVersion":1.1,"position":[-1856,624],"id":"cdf319be-4098-47fa-b7aa-23a11ff830c2","name":"Convert image"},{"parameters":{"resource":"image","operation":"analyze","modelId":{"__rl":true,"value":"models/gemini-2.5-flash","mode":"list","cachedResultName":"models/gemini-2.5-flash"},"text":"que cosa es? y puedes detallar el emisor el total","inputType":"binary","simplify":false,"options":{"maxOutputTokens":2000}},"type":"@n8n/n8n-nodes-langchain.googleGemini","typeVersion":1,"position":[-1824,864],"id":"a938c8bf-a4ee-4e85-85c2-e2820fa1fa70","name":"Analyze an image","credentials":{"googlePalmApi":{"id":"FCkOHRpbraeLDbx7","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"promptType":"define","text":"=Del contexto recibido debes generar una frase donde indiques el rubro del comercio de origen u su nombre y el monto que he consumido comprobante.\npor ejemplo: consumi 532 soles en el supermercado Plaza Vea\ncontexto:{{ $json.extraccion }}","batching":{}},"type":"@n8n/n8n-nodes-langchain.chainLlm","typeVersion":1.7,"position":[-1520,1056],"id":"3c59a9cb-3693-4f44-be5f-c7cae90346cf","name":"Basic LLM Chain"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[-1520,1248],"id":"2f8e8c9d-e03c-4427-b945-534c9a9b5ec5","name":"Google Gemini Chat Model3","credentials":{"googlePalmApi":{"id":"FCkOHRpbraeLDbx7","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"content":"## extrae informacion de imagen","height":468,"width":432,"color":4},"type":"n8n-nodes-base.stickyNote","position":[-2096,560],"typeVersion":1,"id":"b153e842-ec94-4e79-a1e8-711410681c76","name":"Sticky Note2"},{"parameters":{"assignments":{"assignments":[{"id":"74370f28-a83f-420d-953c-8e9a7769ff60","name":"markdown","value":"={{ $json.text }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-1232,896],"id":"696b1040-b4de-4c71-901c-f6bcab0ed22c","name":"normalizador"},{"parameters":{"content":"## extraer datos de factura de un pdf\n","height":400,"width":432,"color":6},"type":"n8n-nodes-base.stickyNote","position":[-2096,1072],"typeVersion":1,"id":"e1ad6409-815e-4588-b2f8-6d3a0a8fab84","name":"Sticky Note3"},{"parameters":{"method":"POST","url":"={{ $('set fields').item.json[\"instance.server_url\"] }}/chat/getBase64FromMediaMessage/{{ $('set fields').item.json[\"instance.nombre\"] }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"apikey","value":"={{ $('set fields').item.json[\"instance.apikey\"] }}"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"message.key.id","value":"={{ $('set fields').item.json[\"message.id\"] }}"},{"name":"convertToMp4","value":"={{Boolean(false)}}"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-2048,1136],"id":"03525848-7a8c-4e47-9653-8724ebf5c85e","name":"get pdf"},{"parameters":{"operation":"toBinary","sourceProperty":"base64","options":{}},"type":"n8n-nodes-base.convertToFile","typeVersion":1.1,"position":[-1888,1136],"id":"cb1623a0-69ab-40fb-b8d4-96b7ab9a33c7","name":"guardar pdf"},{"parameters":{"resource":"document","modelId":{"__rl":true,"value":"models/gemini-2.5-flash","mode":"list","cachedResultName":"models/gemini-2.5-flash"},"text":"que cosa es? y puedes detallar el emisor el total","inputType":"binary","options":{}},"type":"@n8n/n8n-nodes-langchain.googleGemini","typeVersion":1,"position":[-1888,1328],"id":"940f628f-6532-4404-90c1-5fc2a0871a23","name":"Analyze document","credentials":{"googlePalmApi":{"id":"FCkOHRpbraeLDbx7","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"assignments":{"assignments":[{"id":"d5c8689e-ecd5-4987-a4df-6f36658d118e","name":"extraccion","value":"={{ $json.content.parts[0].text }}||{{ $json.candidates[0].content.parts[0].text }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-1536,784],"id":"2bab42df-2eb1-47c3-ab8d-ea3d6815b840","name":"Edit Fields"}],"connections":{"tipo dato":{"main":[[{"node":"get audio","type":"main","index":0}],[{"node":"normalize txt","type":"main","index":0}],[{"node":"get image","type":"main","index":0}],[{"node":"get pdf","type":"main","index":0}]]},"get audio":{"main":[[{"node":"Convert audio","type":"main","index":0}]]},"Convert audio":{"main":[[{"node":"groq transcripción","type":"main","index":0}]]},"groq transcripción":{"main":[[{"node":"audio normalizado","type":"main","index":0}]]},"audio normalizado":{"main":[[{"node":"SET MSG","type":"main","index":0}]]},"recibe whatsapp":{"main":[[{"node":"whitelist1","type":"main","index":0}]]},"whitelist1":{"main":[[{"node":"set fields","type":"main","index":0}]]},"filtro":{"main":[[{"node":"tipo dato","type":"main","index":0}]]},"normalize txt":{"main":[[{"node":"SET MSG","type":"main","index":0}]]},"set fields":{"main":[[{"node":"filtro","type":"main","index":0}]]},"Google Gemini Chat Model1":{"ai_languageModel":[[{"node":"agent router","type":"ai_languageModel","index":0}]]},"Structured Output Parser1":{"ai_outputParser":[[{"node":"agent router","type":"ai_outputParser","index":0}]]},"agent router":{"main":[[{"node":"Switch","type":"main","index":0}]]},"Switch":{"main":[[{"node":"reporteador","type":"main","index":0}],[{"node":"Code saludo","type":"main","index":0}],[{"node":"Code ayuda","type":"main","index":0}],[{"node":"Code aclarar","type":"main","index":0}],[{"node":"get pendientes","type":"main","index":0}],[{"node":"get pendientes1","type":"main","index":0}],[{"node":"Information Extractor","type":"main","index":0}]]},"Code saludo":{"main":[[{"node":"respuesta","type":"main","index":0}]]},"Code ayuda":{"main":[[{"node":"respuesta","type":"main","index":0}]]},"respuesta":{"main":[[{"node":"leido1","type":"main","index":0}]]},"SET MSG":{"main":[[{"node":"agent router","type":"main","index":0}]]},"Information Extractor":{"main":[[{"node":"crear gasto","type":"main","index":0}]]},"crear gasto":{"main":[[{"node":"set respuesta","type":"main","index":0}]]},"Google Gemini Chat Model":{"ai_languageModel":[[{"node":"Information Extractor","type":"ai_languageModel","index":0}]]},"get pendientes":{"main":[[{"node":"Code in JavaScript","type":"main","index":0}]]},"Code aclarar":{"main":[[{"node":"respuesta","type":"main","index":0}]]},"filtro1":{"main":[[{"node":"actualizar gasto","type":"main","index":0}],[{"node":"Code aclarar","type":"main","index":0}]]},"get pendientes1":{"main":[[{"node":"Code in JavaScript1","type":"main","index":0}]]},"filtro2":{"main":[[{"node":"borrar gasto","type":"main","index":0}],[{"node":"Code aclarar","type":"main","index":0}]]},"actualizar gasto":{"main":[[{"node":"Code confirmacion","type":"main","index":0}]]},"borrar gasto":{"main":[[{"node":"Code cancelacion","type":"main","index":0}]]},"Code confirmacion":{"main":[[{"node":"respuesta","type":"main","index":0}]]},"Code cancelacion":{"main":[[{"node":"respuesta","type":"main","index":0}]]},"Code in JavaScript1":{"main":[[{"node":"filtro2","type":"main","index":0}]]},"Code in JavaScript":{"main":[[{"node":"filtro1","type":"main","index":0}]]},"reporteador":{"main":[[{"node":"Code rangos fechas","type":"main","index":0}]]},"Code rangos fechas":{"main":[[{"node":"BuscarGastos","type":"main","index":0}]]},"BuscarGastos":{"main":[[{"node":"Code reporte","type":"main","index":0}]]},"set respuesta":{"main":[[{"node":"leido","type":"main","index":0}]]},"Google Gemini Chat Model2":{"ai_languageModel":[[{"node":"reporteador","type":"ai_languageModel","index":0}]]},"Code reporte":{"main":[[{"node":"respuesta","type":"main","index":0}]]},"cerrar chat":{"main":[[]]},"escribiendo":{"main":[[{"node":"respondiendo","type":"main","index":0}]]},"leido":{"main":[[{"node":"escribiendo","type":"main","index":0}]]},"respondiendo":{"main":[[{"node":"cerrar chat","type":"main","index":0}]]},"escribiendo1":{"main":[[{"node":"respuesta1","type":"main","index":0}]]},"leido1":{"main":[[{"node":"escribiendo1","type":"main","index":0}]]},"respuesta1":{"main":[[{"node":"cerrar","type":"main","index":0}]]},"get image":{"main":[[{"node":"Convert image","type":"main","index":0}]]},"Convert image":{"main":[[{"node":"Analyze an image","type":"main","index":0}]]},"Analyze an image":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]},"Google Gemini Chat Model3":{"ai_languageModel":[[{"node":"Basic LLM Chain","type":"ai_languageModel","index":0}]]},"Basic LLM Chain":{"main":[[{"node":"normalizador","type":"main","index":0}]]},"normalizador":{"main":[[{"node":"SET MSG","type":"main","index":0}]]},"get pdf":{"main":[[{"node":"guardar pdf","type":"main","index":0}]]},"guardar pdf":{"main":[[{"node":"Analyze document","type":"main","index":0}]]},"Analyze document":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]},"Edit Fields":{"main":[[{"node":"Basic LLM Chain","type":"main","index":0}]]}},"settings":{"executionOrder":"v1","callerPolicy":"workflowsFromSameOwner","errorWorkflow":"P2KNQOljSeBCsYgy"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"recibe whatsapp":[{"json":{"headers":{"host":"ene8w.heleo.com.pe","user-agent":"axios/1.10.0","content-length":"75244","accept":"application/json, text/plain, */*","accept-encoding":"gzip, compress, deflate, br","content-type":"application/json","x-forwarded-for":"172.18.0.1","x-forwarded-host":"ene8w.heleo.com.pe","x-forwarded-port":"443","x-forwarded-proto":"https","x-forwarded-server":"07bf72e2d994","x-real-ip":"172.18.0.1"},"params":{},"query":{},"body":{"event":"messages.upsert","instance":"control gastos","data":{"key":{"remoteJid":"51952373850@s.whatsapp.net","fromMe":false,"id":"3F79DAAFD046DB12FB23","senderLid":"138748985655322@lid"},"pushName":"Jesus Arenas","status":"DELIVERY_ACK","message":{"documentMessage":{"url":"https://mmg.whatsapp.net/v/t62.7119-24/565692704_1585739102793113_2032896163561333914_n.enc?ccb=11-4&oh=01_Q5Aa2wGF47JfmDAXQSwNKYlneqEHdqsPcQMZbocwK5v2lE8Ttg&oe=691D8E37&_nc_sid=5e03e0&mms3=true","mimetype":"application/pdf","title":"FAC-FC19-67.pdf","fileSha256":"AwX83bk2OasI6M4B0Cy3PDymtIjC9avp97zRjV+oqcg=","fileLength":"55074","pageCount":1,"mediaKey":"9iB252d0Dznb1hnrYqLNOfZwhjKBMBl3mSMSLZEpyWA=","fileName":"FAC-FC19-67.pdf","fileEncSha256":"isN2tSjSjYr2ddPtNTAjFHdYeQlTj6IZx79fB5rGtCQ=","directPath":"/v/t62.7119-24/565692704_1585739102793113_2032896163561333914_n.enc?ccb=11-4&oh=01_Q5Aa2wGF47JfmDAXQSwNKYlneqEHdqsPcQMZbocwK5v2lE8Ttg&oe=691D8E37&_nc_sid=5e03e0","mediaKeyTimestamp":"1760965726","contextInfo":{"expiration":0,"ephemeralSettingTimestamp":"0","disappearingMode":{"initiator":"CHANGED_IN_CHAT"}},"caption":""},"messageContextInfo":{"deviceListMetadata":{"senderKeyHash":"tODnfE1yAWtVmg==","senderTimestamp":"1760620496","recipientKeyHash":"Fhsl0JINg8bnrQ==","recipientTimestamp":"1760789802"},"deviceListMetadataVersion":2},"base64":""},"contextInfo":{"expiration":0,"ephemeralSettingTimestamp":"0","disappearingMode":{"initiator":"CHANGED_IN_CHAT"}},"messageType":"documentMessage","messageTimestamp":1760965728,"instanceId":"c72aa7a0-c6c1-455f-af14-11c5ca9daaa6","source":"desktop"},"destination":"https://ene8w.heleo.com.pe/webhook/evolution","date_time":"2025-10-20T10:08:48.490Z","sender":"51917381920@s.whatsapp.net","server_url":"https://evoapi.heleo.com.pe","apikey":"9257B015DBF1-4DC7-A07E-10EE00AEE392"},"webhookUrl":"https://ene8w.heleo.com.pe/webhook/evolution","executionMode":"production"}}],"Edit Fields":[{"json":{"extraccion":"Este documento es una **FACTURA ELECTRÓNICA**.\n\nAquí están los detalles solicitados:\n\n**Emisor (Issuer):**\n*   **Nombre/Razón Social:** CORPORACION HELEO S.A.C.\n*   **R.U.C.:** 20518759079\n*   **Dirección:** Av. Lima Polo Nro. 251 Dpto. 403 Urb. Lima Polo Hunt, SANTIAGO DE SURCO / PARQUE INDUSTRIAL MZ E LOTE 10 -TACNA\n*   **Teléfono:** 052-243971\n\n**Total:**\n*   **Importe Total:** S/ 2,242.00 (Dos Mil Doscientos Cuarenta y Dos con 00/100 Soles)"}}]},"versionId":"c16b891f-ec0c-4b4b-a4ef-7e78f097e9d9","triggerCount":1,"shared":[{"createdAt":"2025-10-25T16:40:29.703Z","updatedAt":"2025-10-25T16:40:29.703Z","role":"workflow:owner","workflowId":"9hJpZOYNIVb8m34o","projectId":"SqMi70IbghSQH4eu"}],"tags":[]}